import org.gradle.internal.os.OperatingSystem

apply plugin: 'java'
apply plugin: 'org.jetbrains.kotlin.jvm'

project.ext.lwjglVersion = "3.3.0-SNAPSHOT"
project.ext.jomlVersion = "1.9.25"

switch (OperatingSystem.current()) {
    case OperatingSystem.LINUX:
        def osArch = System.getProperty("os.arch")
        project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                : "natives-linux"
        break
    case OperatingSystem.MAC_OS:
        project.ext.lwjglNatives = "natives-macos"
        break
    case OperatingSystem.WINDOWS:
        project.ext.lwjglNatives = System.getProperty("os.arch").contains("64") ? "natives-windows" : "natives-windows-x86"
        break
}

subprojects {
    dependencies {
        implementation project(":client")
    }
}

dependencies {
    api project(":common")

    api platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    api 'org.l33tlabs.twl:pngdecoder:1.0'

    api "org.lwjgl:lwjgl"
    api "org.lwjgl:lwjgl-assimp"
    api "org.lwjgl:lwjgl-glfw"
    api "org.lwjgl:lwjgl-nfd"
    api "org.lwjgl:lwjgl-openal"
    api "org.lwjgl:lwjgl-openvr"
    api "org.lwjgl:lwjgl-opus"
    api "org.lwjgl:lwjgl-shaderc"
    api "org.lwjgl:lwjgl-stb"
    api "org.lwjgl:lwjgl-tinyexr"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openvr::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opus::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-shaderc::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-tinyexr::$lwjglNatives"
}