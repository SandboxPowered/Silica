import org.gradle.internal.os.OperatingSystem

plugins {
    application
    kotlin("jvm") version "1.5.0"
}

allprojects {
    repositories {
        maven("https://nexus.sandboxpowered.org/repository/maven-snapshots/")
        maven("https://nexus.sandboxpowered.org/repository/maven-public/")
        mavenCentral()
        maven("https://oss.sonatype.org/content/repositories/snapshots/")
        maven("https://jitpack.io")
        maven("https://dl.bintray.com/kotlin/kotlin-eap")
        maven("https://libraries.minecraft.net/")
    }
}

subprojects {
    apply(plugin="kotlin")

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(14))
        }
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "14"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "14"
        }
    }

    dependencies {
        def junitVersion = '5.5.2'
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        testImplementation "io.mockk:mockk:1.10.4"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    tasks.test {
        useJUnitPlatform()
    }
}

application {
    mainClass = "org.sandboxpowered.silica.client.main.Main"
    if (OperatingSystem.current().isMacOsX()) {
        // Need this to make sure the OS starts our app on thread 0
        applicationDefaultJvmArgs += "-XStartOnFirstThread"
    }
}

project.ext.lwjglVersion = "3.2.4-SNAPSHOT"
project.ext.jomlVersion = "1.9.25"

group 'org.sandboxpowered'
version '1.0-SNAPSHOT'

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}
