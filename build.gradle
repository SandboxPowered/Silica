import org.gradle.internal.os.OperatingSystem

plugins {
    id 'application'
    id 'java'
    id 'idea'
    alias libs.plugins.kotlin
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://maven.modded-mc.com/repository/maven-public/' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://jitpack.io' }
        maven { url 'https://libraries.minecraft.net/' }
    }
}

idea {
    module {
        excludeDirs.add(file("run"))
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(java_target_version))
        }
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = java_target_version
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = java_target_version
        }
    }

    dependencies {
        testImplementation testLibs.kotlin.test
        testImplementation testLibs.jupiter.params
        testRuntimeOnly testLibs.jupiter.engine
        testImplementation testLibs.mockk
    }

    tasks.test {
        useJUnitPlatform()
    }
}

application {
    mainClass = "org.sandboxpowered.silica.client.main.Main"
    if (OperatingSystem.current().isMacOsX()) {
        // Need this to make sure the OS starts our app on thread 0
        applicationDefaultJvmArgs += "-XStartOnFirstThread"
    }
}

group 'org.sandboxpowered'
version '1.0-SNAPSHOT'

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(java_target_version))
    }
}