import org.gradle.internal.os.OperatingSystem

plugins {
    id 'application'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
}

allprojects {
    repositories {
        maven { url 'https://maven.modded-mc.com/repository/sandbox-snapshot/' }
        maven { url 'https://maven.modded-mc.com/repository/maven-public/' }
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://jitpack.io' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://libraries.minecraft.net/' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(16))
        }
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "16"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "16"
        }
    }

    dependencies {
        def junitVersion = '5.5.2'
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
        testImplementation "io.mockk:mockk:1.10.4"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    }

    tasks.test {
        useJUnitPlatform()
    }
}

application {
    mainClass = "org.sandboxpowered.silica.client.main.Main"
    if (OperatingSystem.current().isMacOsX()) {
        // Need this to make sure the OS starts our app on thread 0
        applicationDefaultJvmArgs += "-XStartOnFirstThread"
    }
}

project.ext.lwjglVersion = "3.2.4-SNAPSHOT"
project.ext.jomlVersion = "1.9.25"

group 'org.sandboxpowered'
version '1.0-SNAPSHOT'

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}


java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(16))
    }
}